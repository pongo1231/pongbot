#pragma once
#include <hlsdk/public/edict.h>
#include <hlsdk/public/server_class.h>

// Thanks to Cheeseh (RCBot2)
enum EntityData
{
	UNDEF = -1,
	TF2SCORE = 0,
	ENTITY_FLAGS,
	TEAM,
	PLAYERHEALTH,
	EFFECTS,
	AMMO,
	TF2_NUMHEALERS,
	TF2_CONDITIONS,
	VELOCITY,
	TF2CLASS,
	TF2SPYMETER,
	TF2SPYDISGUISED_TEAM,
	TF2SPYDISGUISED_CLASS,
	TF2SPYDISGUISED_TARGET_INDEX,
	TF2SPYDISGUISED_DIS_HEALTH,
	TF2MEDIGUN_HEALING,
	TF2MEDIGUN_TARGETTING,
	TF2TELEPORTERMODE,
	CURRENTWEAPON,
	TF2UBERCHARGE_LEVEL,
	TF2SENTRYHEALTH,
	TF2DISPENSERHEALTH,
	TF2TELEPORTERHEALTH,
	TF2OBJECTCARRIED,
	TF2OBJECTUPGRADELEVEL,
	TF2OBJECTUPGRADEMETAL,
	TF2OBJECTMAXHEALTH,
	TF2DISPMETAL,
	TF2MINIBUILDING,
	MAXSPEED,
	CONSTRAINT_SPEED,
	TF2OBJECTBUILDING,
	HL2DM_PHYSCANNON_ATTACHED,
	HL2DM_PHYSCANNON_OPEN,
	HL2DM_PLAYER_AUXPOWER,
	HL2DM_LADDER_ENT,
	WEAPONLIST,
	WEAPONSTATE,
	WEAPONCLIP1,
	WEAPONCLIP2,
	WEAPON_AMMOTYPE1,
	WEAPON_AMMOTYPE2,
	DOD_PLAYERCLASS,
	DOD_DES_PLAYERCLASS,
	DOD_STAMINA,
	DOD_PRONE,
	SEQUENCE,
	CYCLE,
	ENTITYFLAGS,
	DOD_CP_NUMCAPS,
	DOD_CP_POSITIONS,
	DOD_CP_ALLIES_REQ_CAP,
	DOD_CP_AXIS_REQ_CAP,
	DOD_CP_NUM_AXIS,
	DOD_CP_NUM_ALLIES,
	DOD_CP_OWNER,
	DOD_SNIPER_ZOOMED,
	DOD_MACHINEGUN_DEPLOYED,
	DOD_ROCKET_DEPLOYED,
	DOD_SEMI_AUTO,
	MOVETYPE,
	DOD_GREN_THROWER,
	DOD_SCORE,
	DOD_OBJSCORE,
	DOD_DEATHS,
	DOD_SMOKESPAWN_TIME,
	DOD_ROUNDTIME,
	DOD_K98ZOOM,
	DOD_GARANDZOOM,
	DOD_ALLIESBOMBING,
	DOD_AXISBOMBING,
	DOD_BOMBSPLANTED,
	DOD_BOMBSREQ,
	DOD_BOMBSDEFUSED,
	DOD_BOMBSREMAINING,
	DOD_PLANTINGBOMB,
	DOD_DEFUSINGBOMB,
	ALL_ENTOWNER,
	DOD_BOMB_STATE,
	DOD_BOMB_TEAM,
	DOD_CP_VISIBLE,
	GROUND_ENTITY,
	ORIGIN,
	TAKEDAMAGE,
	SENTRY_ENEMY,
	WATERLEVEL,
	TF2OBJECTSHELLS,
	TF2OBJECTROCKETS,
	TF2_TELEPORT_RECHARGETIME,
	TF2_TELEPORT_RECHARGEDURATION,
	TF2_OBJTR_m_vCPPositions,
	TF2_OBJTR_m_bCPIsVisible,
	TF2_OBJTR_m_iTeamIcons,
	TF2_OBJTR_m_iTeamOverlays,
	TF2_OBJTR_m_iTeamReqCappers,
	TF2_OBJTR_m_flTeamCapTime,
	TF2_OBJTR_m_iPreviousPoints,
	TF2_OBJTR_m_bTeamCanCap,
	TF2_OBJTR_m_iTeamBaseIcons,
	TF2_OBJTR_m_iBaseControlPoints,
	TF2_OBJTR_m_bInMiniRound,
	TF2_OBJTR_m_iWarnOnCap,
	TF2_OBJTR_m_iCPGroup,
	TF2_OBJTR_m_bCPLocked,
	TF2_OBJTR_m_bTrackAlarm,
	TF2_OBJTR_m_flUnlockTimes,
	TF2_OBJTR_m_flCPTimerTimes,
	TF2_OBJTR_m_iNumTeamMembers,
	TF2_OBJTR_m_iCappingTeam,
	TF2_OBJTR_m_iTeamInZone,
	TF2_OBJTR_m_bBlocked,
	TF2_OBJTR_m_iOwner,
	TF2_OBJTR_m_bCPCapRateScalesWithPlayers,
	TF2_OBJTR_m_iNumControlPoints,
	TF2_OBJTR_m_bPlayingMiniRounds,
	TF2_RNDTM_m_flTimerEndTime,
	TF2_RNDTM_m_nSetupTimeLength,
	TF2_RNDTM_m_bInSetup,
	PIPEBOMB_OWNER,
	TF2_TAUNTYAW,
	TF2_HIGHFIVE,
	TF2_HIGHFIVE_PARTNER,
	SENTRYGUN_PLACING,
	TF2_ISCARRYINGOBJ,
	TF2_GETCARRIEDOBJ,
	TF2_ATTRIBUTELIST,
	TF2_ITEMDEFINITIONINDEX,
	TF2_DISGUISEWEARABLE,
	TF2_ENTITYLEVEL,
	TF2_RAGEMETER,
	TF2_RAGEDRAINING,
	TF2_ENTITYQUALITY,
	SIMULATIONTIME,
	TF2_WEAPON_INITIALIZED,
	TF2_INUPGRADEZONE,
	TF2_EXTRAWEARABLE,
	TF2_EXTRAWEARABLEVIEWMODEL,
	TF2_ENERGYDRINKMETER,
	TF2_MEDIEVALMODE,
	TF2_ACTIVEWEAPON,
	TF2_BUILDER_TYPE,
	TF2_BUILDER_MODE,
	TF2_CHARGE_RESIST_TYPE,
	TF2_ROUNDSTATE,
	TF2DESIREDCLASS, //Jrob
	GET_PROPDATA_MAX
};

namespace EntityDataFetcher
{
	SendProp *FetchFromEdict(edict_t *edict, int data);
}